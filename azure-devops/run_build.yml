# Copyright (c) Microsoft Corporation.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

parameters:
  targetPlatform: 'not-defined'

steps:
  - checkout: self
    submodules: recursive
  - powershell: |
      if (-not (Test-Path env:targetPlatform))
      {
        Write-Host "##vso[task.logissue type=error;]Missing template parameter targetPlatform"
        Write-Host '##vso[task.complete result=Failed;]'
      }
    displayName: 'Check parameter targetPlatform is defined'
    env:
      targetPlatform: ${{ parameters.targetPlatform }}
 # - task: BatchScript@1
 #   displayName: 'Enforce clang-format'
 #   condition: eq('${{ parameters.targetPlatform }}', 'x86')
 #   inputs:
 #     filename: 'azure-devops/enforce-clang-format.cmd'
 #     failOnStandardError: true
  - task: CacheBeta@0
    displayName: Cache vcpkg
    inputs:
      key: $(vcpkgResponseFile) | $(Build.SourcesDirectory)/.git/modules/vcpkg/HEAD
      path: '$(vcpkgLocation)'
  - task: run-vcpkg@0
    displayName: 'Run vcpkg to install boost-build'
    inputs:
      vcpkgArguments: 'boost-build:x86-windows'
      vcpkgDirectory: '$(vcpkgLocation)'
  - task: run-vcpkg@0
    displayName: 'Run vcpkg'
    inputs:
      vcpkgArguments: '@$(vcpkgResponseFile)'
      vcpkgDirectory: '$(vcpkgLocation)'
      vcpkgTriplet: ${{ parameters.targetPlatform }}-windows
  - task: run-cmake@0
    displayName: 'Run CMake with Ninja'
    enabled: true
    inputs:
      cmakeListsTxtPath: 'CMakeSettings.json'
      useVcpkgToolchainFile: true
      configurationRegexFilter: '.*${{ parameters.targetPlatform }}.*'
      buildDirectory: $(Build.ArtifactStagingDirectory)/${{ parameters.targetPlatform }}
